{"version":3,"sources":["modules/pages/Settings/index.tsx"],"names":["useStyles","makeStyles","theme","textField","marginLeft","spacing","marginRight","width","Dashboard","classes","dispatch","useDispatch","urlData","useSelector","settings","useEffect","onGetUrls","React","useState","url_1","url_2","url_3","url_4","url_5","url_main","urls","setUrls","first","second","third","fourth","fifth","main","handleChange","name","event","target","value","m","id","label","defaultValue","className","onChange","margin","variant","color","type","size","fullWidth","onClick","onSaveDomains","style","marginTop"],"mappings":"8MAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,WAAYF,EAAMG,QAAQ,GAC1BC,YAAaJ,EAAMG,QAAQ,GAC3BE,MAAO,YAgIAC,UA7HG,WACd,IAAMC,EAAUT,IACVU,EAAWC,cACTC,EAAYC,aAGlB,qBAAGC,YAHGF,QAKRG,qBAAU,WACNL,EAASM,iBACV,CAACN,IAGJ,MAAwBO,IAAMC,SAAS,CACnCC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,MAAO,GACPC,SAAU,KANd,mBAAOC,EAAP,KAAaC,EAAb,KASAX,qBAAU,WAAO,IAAD,EACZH,GAAWc,EAAQ,2BACZD,GADW,uBAEb,QAAUb,EAAQe,OAFL,cAGb,QAAUf,EAAQgB,QAHL,cAIb,QAAUhB,EAAQiB,OAJL,cAKb,QAAUjB,EAAQkB,QALL,cAMb,QAAUlB,EAAQmB,OANL,cAOb,WAAanB,EAAQoB,MAPR,OASnB,CAACpB,IAEJ,IAAMqB,EAAe,SAACC,GAAD,OAAkB,SAACC,GACpCT,EAAQ,2BAAKD,GAAN,kBAAaS,EAAOC,EAAMC,OAAOC,WAE5C,OACI,mCACI,eAAC,IAAD,CAAK9B,MAAO,MAAO+B,EAAG,OAAtB,UACI,cAAC,IAAD,CACIC,GAAG,iBACHC,MAAM,kBACNC,aAAa,GACbP,KAAK,QACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKN,MACZwB,SAAUV,EAAa,SACvBW,OAAO,SACPC,QAAQ,aAEZ,cAAC,IAAD,CACIN,GAAG,iBACHC,MAAM,mBACNC,aAAa,GACbP,KAAK,QACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKL,MACZuB,SAAUV,EAAa,SACvBW,OAAO,SACPC,QAAQ,aAEZ,cAAC,IAAD,CACIN,GAAG,iBACHC,MAAM,kBACNC,aAAa,GACbP,KAAK,QACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKJ,MACZsB,SAAUV,EAAa,SACvBW,OAAO,SACPC,QAAQ,aAEZ,cAAC,IAAD,CACIN,GAAG,iBACHC,MAAM,mBACNC,aAAa,GACbP,KAAK,QACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKH,MACZqB,SAAUV,EAAa,SACvBW,OAAO,SACPC,QAAQ,aAEZ,cAAC,IAAD,CACIN,GAAG,iBACHC,MAAM,kBACNC,aAAa,GACbP,KAAK,QACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKF,MACZoB,SAAUV,EAAa,SACvBW,OAAO,SACPC,QAAQ,aAEZ,cAAC,IAAD,CACIN,GAAG,iBACHC,MAAM,iBACNC,aAAa,GACbP,KAAK,WACLQ,UAAWjC,EAAQN,UACnBkC,MAAOZ,EAAKD,SACZmB,SAAUV,EAAa,YACvBW,OAAO,SACPC,QAAQ,aAGZ,cAAC,IAAD,CACIA,QAAQ,YACRC,MAAM,UACNC,KAAK,SACLC,KAAK,QACLC,WAAS,EACTC,QAAS,WACLxC,EAASyC,YAAc1B,KAE3B2B,MAAO,CAAEC,UAAW,IATxB","file":"static/js/22.f6bf9fb9.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../../redux/store';\r\n\r\nimport { onSaveDomains, onGetUrls } from '../../../redux/actions';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '100%'\r\n    },\r\n}));\r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { urlData } = useSelector<\r\n        AppState,\r\n        AppState['settings']\r\n    >(({ settings }) => settings);\r\n\r\n    useEffect(() => {\r\n        dispatch(onGetUrls());\r\n    }, [dispatch])\r\n\r\n\r\n    const [urls, setUrls] = React.useState({\r\n        url_1: \"\",\r\n        url_2: \"\",\r\n        url_3: \"\",\r\n        url_4: \"\",\r\n        url_5: \"\",\r\n        url_main: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        urlData && setUrls({\r\n            ...urls,\r\n            ['url_1']: urlData.first,\r\n            ['url_2']: urlData.second,\r\n            ['url_3']: urlData.third,\r\n            ['url_4']: urlData.fourth,\r\n            ['url_5']: urlData.fifth,\r\n            ['url_main']: urlData.main\r\n        })\r\n    }, [urlData])\r\n\r\n    const handleChange = (name: string) => (event: any) => {\r\n        setUrls({ ...urls, [name]: event.target.value });\r\n    };\r\n    return (\r\n        <>\r\n            <Box width={'50%'} m={'auto'}>\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input first url'\r\n                    defaultValue=''\r\n                    name='url_1'\r\n                    className={classes.textField}\r\n                    value={urls.url_1}\r\n                    onChange={handleChange('url_1')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input second url'\r\n                    defaultValue=''\r\n                    name='url_2'\r\n                    className={classes.textField}\r\n                    value={urls.url_2}\r\n                    onChange={handleChange('url_2')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input third url'\r\n                    defaultValue=''\r\n                    name='url_3'\r\n                    className={classes.textField}\r\n                    value={urls.url_3}\r\n                    onChange={handleChange('url_3')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input fourth url'\r\n                    defaultValue=''\r\n                    name='url_4'\r\n                    className={classes.textField}\r\n                    value={urls.url_4}\r\n                    onChange={handleChange('url_4')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input fifth url'\r\n                    defaultValue=''\r\n                    name='url_5'\r\n                    className={classes.textField}\r\n                    value={urls.url_5}\r\n                    onChange={handleChange('url_5')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n                <TextField\r\n                    id='outlined-email'\r\n                    label='input main url'\r\n                    defaultValue=''\r\n                    name='url_main'\r\n                    className={classes.textField}\r\n                    value={urls.url_main}\r\n                    onChange={handleChange('url_main')}\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                />\r\n\r\n                <Button\r\n                    variant='contained'\r\n                    color='primary'\r\n                    type='button'\r\n                    size='large'\r\n                    fullWidth\r\n                    onClick={() => {\r\n                        dispatch(onSaveDomains(urls))\r\n                    }}\r\n                    style={{ marginTop: 20 }}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}